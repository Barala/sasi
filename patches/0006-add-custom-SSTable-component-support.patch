From b89a46ea53157190b13020ac2b877bf49b2af3fc Mon Sep 17 00:00:00 2001
From: Pavel Yaskevich <xedin@apache.org>
Date: Mon, 2 Nov 2015 16:58:35 -0800
Subject: [PATCH 06/10] add custom SSTable component support

---
 .../org/apache/cassandra/io/sstable/Component.java | 32 ++++++++++++++--------
 .../org/apache/cassandra/io/sstable/SSTable.java   | 25 ++++++++++++++++-
 2 files changed, 44 insertions(+), 13 deletions(-)

diff --git a/src/java/org/apache/cassandra/io/sstable/Component.java b/src/java/org/apache/cassandra/io/sstable/Component.java
index 35efca5..f4fe3f9 100644
--- a/src/java/org/apache/cassandra/io/sstable/Component.java
+++ b/src/java/org/apache/cassandra/io/sstable/Component.java
@@ -19,6 +19,7 @@ package org.apache.cassandra.io.sstable;
 
 import java.io.File;
 import java.util.EnumSet;
+import java.util.regex.Pattern;
 
 import com.google.common.base.Objects;
 
@@ -59,6 +60,8 @@ public class Component
         SUMMARY("Summary.db"),
         // table of contents, stores the list of all components for the sstable
         TOC("TOC.txt"),
+        // in-built secondary index (may be multiple per sstable)
+        SECONDARY_INDEX("SI_.*.db"),
         // custom component, used by e.g. custom compaction strategy
         CUSTOM(null);
 
@@ -71,8 +74,12 @@ public class Component
         static Type fromRepresentation(String repr)
         {
             for (Type type : TYPES)
-                if (repr.equals(type.repr))
+            {
+                if (type.repr == null)
+                    continue;
+                if (Pattern.matches(type.repr, repr))
                     return type;
+            }
             return CUSTOM;
         }
     }
@@ -130,17 +137,18 @@ public class Component
         Component component;
         switch(type)
         {
-            case DATA:              component = Component.DATA;                         break;
-            case PRIMARY_INDEX:     component = Component.PRIMARY_INDEX;                break;
-            case FILTER:            component = Component.FILTER;                       break;
-            case COMPACTED_MARKER:  component = Component.COMPACTED_MARKER;             break;
-            case COMPRESSION_INFO:  component = Component.COMPRESSION_INFO;             break;
-            case STATS:             component = Component.STATS;                        break;
-            case DIGEST:            component = Component.DIGEST;                       break;
-            case CRC:               component = Component.CRC;                          break;
-            case SUMMARY:           component = Component.SUMMARY;                      break;
-            case TOC:               component = Component.TOC;                          break;
-            case CUSTOM:            component = new Component(Type.CUSTOM, path.right); break;
+            case DATA:              component = Component.DATA;                                 break;
+            case PRIMARY_INDEX:     component = Component.PRIMARY_INDEX;                        break;
+            case FILTER:            component = Component.FILTER;                               break;
+            case COMPACTED_MARKER:  component = Component.COMPACTED_MARKER;                     break;
+            case COMPRESSION_INFO:  component = Component.COMPRESSION_INFO;                     break;
+            case STATS:             component = Component.STATS;                                break;
+            case DIGEST:            component = Component.DIGEST;                               break;
+            case CRC:               component = Component.CRC;                                  break;
+            case SUMMARY:           component = Component.SUMMARY;                              break;
+            case TOC:               component = Component.TOC;                                  break;
+            case SECONDARY_INDEX:   component = new Component(Type.SECONDARY_INDEX, path.right); break;
+            case CUSTOM:            component = new Component(Type.CUSTOM, path.right);         break;
             default:
                  throw new IllegalStateException();
         }
diff --git a/src/java/org/apache/cassandra/io/sstable/SSTable.java b/src/java/org/apache/cassandra/io/sstable/SSTable.java
index 6ec4ace..6dbff97 100644
--- a/src/java/org/apache/cassandra/io/sstable/SSTable.java
+++ b/src/java/org/apache/cassandra/io/sstable/SSTable.java
@@ -24,6 +24,7 @@ import java.util.concurrent.CopyOnWriteArraySet;
 
 import com.google.common.base.Predicates;
 import com.google.common.collect.Collections2;
+import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Ordering;
 import com.google.common.collect.Sets;
 import com.google.common.io.Files;
@@ -142,7 +143,12 @@ public abstract class SSTable
             if (component.equals(Component.DATA) || component.equals(Component.COMPACTED_MARKER) || component.equals(Component.SUMMARY))
                 continue;
 
-            FileUtils.deleteWithConfirm(desc.filenameFor(component));
+            String componentPath = desc.filenameFor(component);
+            // some of the SI components could be missing but that just means that SSTable didn't have those columns
+            if (component.type.equals(Component.Type.SECONDARY_INDEX) && !new File(componentPath).exists())
+                continue;
+
+            FileUtils.deleteWithConfirm(componentPath);
         }
         // remove the COMPACTED_MARKER component last if it exists
         // Note: newly created sstable should not have a marker, but we keep this for now to make sure
@@ -353,4 +359,21 @@ public abstract class SSTable
         appendTOC(descriptor, componentsToAdd);
         components.addAll(componentsToAdd);
     }
+
+    /**
+     * @return an immutable view of the components of this sstable
+     * @param filter a component type to filter by
+     */
+    public Set<Component> getComponents(Component.Type filter)
+    {
+        if (filter == null)
+            return ImmutableSet.<Component>builder().addAll(components).build();
+        Set<Component> s = new HashSet<>();
+        for (Component c : components)
+        {
+            if (c.type == filter)
+                s.add(c);
+        }
+        return s;
+    }
 }
-- 
2.6.0

